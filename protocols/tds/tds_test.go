package tds

import (
	"bytes"
	"encoding/hex"
	"fmt"
	"testing"
)

/*
00000000  12 01 00 29 00 00 00 00  00 00 15 00 06 01 00 1b  |...)............|
00000010  00 01 02 00 1c 00 01 03  00 1d 00 04 ff 08 00 01  |................|
00000020  55 00 00 00 00 f0 11 00  00                       |U........|
*/

func TestParsePreLogin(t *testing.T) {
	raw := "1201002900000000000015000601001b000102001c000103001d0004ff0800015500000000f0110000"
	data, _ := hex.DecodeString(raw)
	buffer := bytes.NewBuffer(data)
	header, err := ParseHeader(buffer)
	if err != nil {
		t.Error(err)
	}
	fmt.Printf("%+v\n", header)
	login, err := parseLogin(buffer)
	if err != nil {
		t.Error(err)
	}
	fmt.Printf("%+v\n", login)
}

/*
00000000  10 01 00 c8 00 00 01 00  c0 00 00 00 01 00 00 71  |...............q|
00000010  00 00 00 00 00 00 00 07  e8 04 00 00 00 00 00 00  |................|
00000020  e0 03 00 08 5c fe ff ff  1e 04 00 00 56 00 07 00  |....\.......V...|
00000030  64 00 02 00 68 00 00 00  68 00 10 00 88 00 12 00  |d...h...h.......|
00000040  00 00 00 00 ac 00 04 00  b4 00 00 00 b4 00 06 00  |................|
00000050  9c 8e 99 4e 32 1d 00 00  00 00 c0 00 00 00 57 00  |...N2.........W.|
00000060  42 00 41 00 41 00 39 00  39 00 39 00 73 00 61 00  |B.A.A.9.9.9.s.a.|
00000070  53 00 6f 00 6d 00 65 00  6f 00 6e 00 65 00 53 00  |S.o.m.e.o.n.e.S.|
00000080  6f 00 6d 00 65 00 54 00  68 00 69 00 6e 00 67 00  |o.m.e.T.h.i.n.g.|
00000090  31 00 36 00 33 00 2e 00  31 00 37 00 32 00 2e 00  |1.6.3...1.7.2...|
000000a0  31 00 36 00 38 00 2e 00  34 00 2c 00 31 00 34 00  |1.6.8...4.,.1.4.|
000000b0  33 00 33 00 4f 00 44 00  42 00 43 00 6d 00 61 00  |3.3.O.D.B.C.m.a.|
000000c0  73 00 74 00 65 00 72 00                           |s.t.e.r.|
*/

func TestParseTDS7Login(t *testing.T) {
	raw := "100100c800000100c0000000010000710000000000000007e804000000000000e00300085cfeffff1e" +
		"040000560007006400020068000000680010008800120000000000ac000400b4000000b40006009c8e994e3" +
		"21d00000000c000000057004200410041003900390039007300610053006f006d0065006f006e0065005300" +
		"6f006d0065005400680069006e0067003100360033002e003100370032002e003100360038002e0034002c0" +
		"031003400330033004f004400420043006d0061007300740065007200"
	data, _ := hex.DecodeString(raw)
	buffer := bytes.NewBuffer(data)
	header, err := ParseHeader(buffer)
	if err != nil {
		t.Error(err)
	}
	fmt.Printf("%+v\n", header)
	login, err := parseLogin(buffer)
	if err != nil {
		t.Error(err)
	}
	fmt.Printf("%+v\n", login)
}

/*
00000000  10 01 00 9e 00 00 01 00  96 00 00 00 01 00 00 71  |...............q|
00000010  00 00 00 00 00 00 00 07  14 0d 00 00 00 00 00 00  |................|
00000020  e0 03 00 00 e0 01 00 00  09 04 00 00 56 00 06 00  |............V...|
00000030  62 00 02 00 66 00 00 00  66 00 07 00 74 00 0d 00  |b...f...f...t...|
00000040  00 00 00 00 8e 00 04 00  96 00 00 00 96 00 00 00  |................|
00000050  00 50 56 c0 00 01 00 00  00 00 96 00 00 00 53 00  |.PV...........S.|
00000060  45 00 52 00 56 00 45 00  52 00 73 00 61 00 4f 00  |E.R.V.E.R.s.a.O.|
00000070  53 00 51 00 4c 00 2d 00  33 00 32 00 31 00 36 00  |S.Q.L.-.3.2.1.6.|
00000080  33 00 2e 00 31 00 37 00  32 00 2e 00 31 00 36 00  |3...1.7.2...1.6.|
00000090  38 00 2e 00 34 00 4f 00  44 00 42 00 43 00        |8...4.O.D.B.C.|
*/

func TestParseTDS7Login2(t *testing.T) {
	raw := "100100c800000100c0000000010000710000000000000007e804000000000000e00300085cfeffff1e" +
		"040000560007006400020068000000680010008800120000000000ac000400b4000000b40006009c8e994e3" +
		"21d00000000c000000057004200410041003900390039007300610053006f006d0065006f006e0065005300" +
		"6f006d0065005400680069006e0067003100360033002e003100370032002e003100360038002e0034002c0" +
		"031003400330033004f004400420043006d0061007300740065007200"
	data, _ := hex.DecodeString(raw)
	buffer := bytes.NewBuffer(data)
	header, err := ParseHeader(buffer)
	if err != nil {
		t.Error(err)
	}
	fmt.Printf("%+v\n", header)
	login, err := parseLogin(buffer)
	if err != nil {
		t.Error(err)
	}
	fmt.Printf("%+v\n", login)
	fmt.Println(string(login.ClientProgVer[:]))
}
